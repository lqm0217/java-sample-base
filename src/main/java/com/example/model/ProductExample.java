package com.example.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProductExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public ProductExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartIsNull() {
            addCriterion("effective_period_start is null");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartIsNotNull() {
            addCriterion("effective_period_start is not null");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_start =", value, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartNotEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_start <>", value, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartGreaterThan(Date value) {
            addCriterionForJDBCDate("effective_period_start >", value, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_start >=", value, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartLessThan(Date value) {
            addCriterionForJDBCDate("effective_period_start <", value, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_start <=", value, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartIn(List<Date> values) {
            addCriterionForJDBCDate("effective_period_start in", values, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartNotIn(List<Date> values) {
            addCriterionForJDBCDate("effective_period_start not in", values, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("effective_period_start between", value1, value2, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodStartNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("effective_period_start not between", value1, value2, "effectivePeriodStart");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndIsNull() {
            addCriterion("effective_period_end is null");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndIsNotNull() {
            addCriterion("effective_period_end is not null");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_end =", value, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndNotEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_end <>", value, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndGreaterThan(Date value) {
            addCriterionForJDBCDate("effective_period_end >", value, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_end >=", value, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndLessThan(Date value) {
            addCriterionForJDBCDate("effective_period_end <", value, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("effective_period_end <=", value, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndIn(List<Date> values) {
            addCriterionForJDBCDate("effective_period_end in", values, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndNotIn(List<Date> values) {
            addCriterionForJDBCDate("effective_period_end not in", values, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("effective_period_end between", value1, value2, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andEffectivePeriodEndNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("effective_period_end not between", value1, value2, "effectivePeriodEnd");
            return (Criteria) this;
        }

        public Criteria andDivisionIsNull() {
            addCriterion("division is null");
            return (Criteria) this;
        }

        public Criteria andDivisionIsNotNull() {
            addCriterion("division is not null");
            return (Criteria) this;
        }

        public Criteria andDivisionEqualTo(Integer value) {
            addCriterion("division =", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotEqualTo(Integer value) {
            addCriterion("division <>", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionGreaterThan(Integer value) {
            addCriterion("division >", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionGreaterThanOrEqualTo(Integer value) {
            addCriterion("division >=", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionLessThan(Integer value) {
            addCriterion("division <", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionLessThanOrEqualTo(Integer value) {
            addCriterion("division <=", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionIn(List<Integer> values) {
            addCriterion("division in", values, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotIn(List<Integer> values) {
            addCriterion("division not in", values, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionBetween(Integer value1, Integer value2) {
            addCriterion("division between", value1, value2, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotBetween(Integer value1, Integer value2) {
            addCriterion("division not between", value1, value2, "division");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNull() {
            addCriterion("supplier_id is null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNotNull() {
            addCriterion("supplier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdEqualTo(Integer value) {
            addCriterion("supplier_id =", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotEqualTo(Integer value) {
            addCriterion("supplier_id <>", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThan(Integer value) {
            addCriterion("supplier_id >", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("supplier_id >=", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThan(Integer value) {
            addCriterion("supplier_id <", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThanOrEqualTo(Integer value) {
            addCriterion("supplier_id <=", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIn(List<Integer> values) {
            addCriterion("supplier_id in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotIn(List<Integer> values) {
            addCriterion("supplier_id not in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id not between", value1, value2, "supplierId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table product
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 30 21:13:13 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table product
     *
     * @mbg.generated Sun Sep 30 21:13:13 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}